package view

import (
	"github.com/bitstorm-tech/cockaigne/internal/model"
	"strconv"
)

templ FilterModal(categories []model.Category, favoriteCategoryIds []int, searchRadius int, redirectAfterSave string) {
	@Modal() {
		<form hx-post={ "/api/accounts/filter?redirect-after-save=" + redirectAfterSave } hx-target="#modal">
			<div class="form-control pb-6">
				<label id="radius-label" for="radius" class="flex items-center gap-1"></label>
				<input
					id="radius"
					type="range"
					name="searchRadius"
					min="500"
					max="25000"
					step="500"
					value={ strconv.Itoa(searchRadius) }
					oninput="changeRadius(this)"
				/>
			</div>
			<hr/>
			<div class="grid grid-cols-2 py-4 gap-2">
				<button
					type="button"
					class="btn-sm btn-primary"
					hx-post="/api/accounts/filter/select-all"
					hx-target="#category-list"
				>
					Alles auswählen
				</button>
				<button
					type="button"
					class="btn-sm btn-primary"
					hx-post="/api/accounts/filter/deselect-all"
					hx-target="#category-list"
				>
					Alles abwählen
				</button>
			</div>
			<div id="category-list" class="flex flex-col gap-2">
				@CategoryList(categories, favoriteCategoryIds)
			</div>
			<div class="modal-action">
				<button>Speichern</button>
				<button class="btn-primary" hx-delete="/ui/remove" hx-target="#modal">Abbrechen</button>
			</div>
		</form>
		@filterScript(searchRadius, favoriteCategoryIds)
	}
}

templ CategoryList(categories []model.Category, favoriteCategoryIds []int) {
	for _, category := range categories {
		<div class="form-control-horizontal">
			<input
				type="checkbox"
				id={ category.Name }
				class="checkbox"
				name="favoriteCategoryIds"
				value={ strconv.Itoa(category.ID) }
				checked?={ category.IsFavorite(favoriteCategoryIds) }
				oninput="changeSelectedCategories(this)"
			/>
			<label for={ category.Name }>{ category.Name }</label>
		</div>
	}
}

script filterScript(searchRadius int, selectedCategories []int) {
  FilterService.searchRadius = searchRadius;
  FilterService.selectedCategories  = selectedCategories;

  const searchRadiusLabel = document.getElementById("radius-label");
  searchRadiusLabel.textContent = `Umkreis ${searchRadius * 2 / 1000} km`

  document.changeRadius = function(element) {
    const newSearchRadius = +element.value;
    FilterService.searchRadius = newSearchRadius;
    searchRadiusLabel.textContent = `Umkreis ${newSearchRadius * 2 / 1000} km`
  }

  document.changeSelectedCategories = function(element) {
    FilterService.toggleSelectedCategory(+element.value);
  }
}
