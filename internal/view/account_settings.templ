package view

import "github.com/bitstorm-tech/cockaigne/internal/model"
import "strconv"
import "fmt"

templ Settings(isDealer bool) {
	@BaseLayout() {
		<div class="p-4" x-data="{selectedTab: 0}">
			<div class="tabs tabs-bordered" x-cloak>
				if isDealer {
					<div
						hx-get="/settings-dealer-common"
						hx-target="#content"
						hx-trigger="click"
						class="tab"
						:class="selectedTab === 0 ? 'tab-active' : ''"
						@click="selectedTab = 0"
					>
						Allgemein
					</div>
					<div
						hx-get="/settings-dealer-address"
						hx-target="#content"
						hx-trigger="click"
						class="tab"
						:class="selectedTab === 2 ? 'tab-active' : ''"
						@click="selectedTab = 2"
					>
						Adresse
					</div>
				} else {
					<div
						hx-get="/settings-user-common"
						hx-target="#content"
						hx-trigger="click"
						class="tab"
						:class="selectedTab === 0 ? 'tab-active' : ''"
						@click="selectedTab = 0"
					>
						Allgemein
					</div>
				}
				<div
					hx-get="/settings-profile-image"
					hx-target="#content"
					hx-trigger="click"
					class="tab"
					:class="selectedTab === 1 ? 'tab-active' : ''"
					@click="selectedTab = 1"
				>
					Profilbild
				</div>
			</div>
			if isDealer {
				<div id="content" class="pt-8" hx-trigger="load once" hx-get="/settings-dealer-common"></div>
			} else {
				<div id="content" class="pt-8" hx-trigger="load once" hx-get="/settings-user-common"></div>
			}
		</div>
	}
}

templ CommonUserSettings(username string, email string) {
	<form class="flex flex-col gap-4" hx-post="/settings-user-common" hx-target="closest #content">
		<div class="form-control">
			<label for="username">Benutzername</label>
			<input id="username" type="text" name="username" value={ username }/>
		</div>
		<div class="form-control">
			<label for="email">Benutzername</label>
			<input id="email" type="email" value={ email } disabled/>
		</div>
		<button type="button" class="btn btn-primary">E-Mail ändern</button>
		<button type="button" class="btn btn-primary">Password ändern</button>
		<div class="grid grid-cols-2 gap-4">
			<button>Speichern</button>
			<a class="btn btn-primary" href="/">Abbrechen</a>
		</div>
	</form>
}

templ CommonDealerSettings(acc model.Account) {
	<form class="flex flex-col gap-4" hx-post="/settings" hx-target="closest #content">
		<div class="form-control">
			<label for="username">Benutzername</label>
			<input id="username" type="text" name="username" value={ acc.Username }/>
		</div>
		<div class="form-control">
			<label for="email">Benutzername</label>
			<input id="email" type="email" value={ acc.Email } disabled/>
		</div>
		<button type="button" class="btn btn-primary">E-Mail ändern</button>
		<div class="form-control">
			<label for="phone">Telefonnummer</label>
			<input id="phone" type="text" name="phone" value={ acc.Phone.String }/>
		</div>
		<div class="form-control">
			<label for="tax-id">Umsatzsteuer ID</label>
			<input id="tax-id" type="text" name="tax-id" value={ acc.TaxId.String }/>
		</div>
		<div class="form-control">
			<label for="category-select">Branche</label>
			<div
				id="category-select"
				hx-get={ "/ui/category-select?name=Kategorie&selected=" + strconv.Itoa(int(acc.DefaultCategory.Int32)) }
				hx-trigger="load once"
				hx-target="this"
			></div>
		</div>
		<button type="button" class="btn btn-primary">Password ändern</button>
		<div class="grid grid-cols-2 gap-4">
			<button>Speichern</button>
			<a class="btn btn-primary" href="/">Abbrechen</a>
		</div>
	</form>
}

templ ProfileImageSettings(imageUrl string, isDealer bool) {
	<form
		class="flex flex-col gap-4"
		enctype="multipart/form-data"
		hx-post="/profile-image-update"
		x-data="{
			newImage: null,
			deleteImageFlag: false,
			showImage: function(event) {
				const file = event.target.files[0];
				if (file) {
					this.deleteImageFlag = false;
					const URL = window.URL || window.webkitURL;
					this.newImage = URL.createObjectURL(file);
				}
			},
			deleteImage: function() {
				this.newImage = null;
				this.deleteImageFlag = true;
			}
		}"
	>
		<div class="grid grid-cols-2 gap-4">
			<button type="button" class="btn btn-primary" @click="input.click()">Ändern</button>
			<button type="button" class="btn btn-primary" @click="deleteImage()">Löschen</button>
		</div>
		<img :src="newImage" alt="Neues Profilebild" x-show="newImage"/>
		<div x-show="!newImage && !deleteImageFlag">
			@ProfileImage(imageUrl, isDealer)
		</div>
		<div x-show="deleteImageFlag">
			@ProfileImage("", isDealer)
		</div>
		<div class="grid grid-cols-2 gap-4">
			<button>Speichern</button>
			<a class="btn btn-primary" href="/">Abbrechen</a>
		</div>
		<input id="input" name="profile-image" type="file" @change="showImage($event)" hidden/>
		<input id="delete" name="delete-image" type="text" :value="deleteImageFlag" hidden/>
	</form>
}

templ AddressSettings(acc model.Account) {
	<form class="flex flex-col gap-4">
		<div class="grid grid-cols-3 gap-3">
			<div class="col-span-2">
				<div class="form-control">
					<label for="street">Straße</label>
					<input id="street" type="text" name="street" value={ acc.Street.String }/>
				</div>
			</div>
			<div class="form-control">
				<label for="housenumber">Hausnummer</label>
				<input id="housenumber" type="text" name="housenumber" value={ acc.HouseNumber.String }/>
			</div>
		</div>
		<div class="grid grid-cols-3 gap-3">
			<div class="col-span-2">
				<div class="form-control">
					<label for="city">Ort</label>
					<input id="city" type="text" name="city" value={ acc.City.String }/>
				</div>
			</div>
			<div class="form-control">
				<label for="zip">PLZ</label>
				<input id="zip" type="text" name="zip" value={ fmt.Sprintf("%d", acc.ZipCode.Int32) }/>
			</div>
		</div>
		<i>
			Bitte prüfe genau, ob die Adresse auf der Karte korrekt angezeigt wird. Es ist extrem wichtig, dass die Position auf
			der Karte stimmt, da hier die eingestellten Deals angezeigt werden!
		</i>
		<button class="btn btn-sm btn-primary" type="button" onclick="searchLocation()">Auf Karte anzeigen</button>
		<div id="map" class="w-full h-64"></div>
		<div class="grid grid-cols-2 gap-4">
			<button hx-post="/settings-dealer-address">Speichern</button>
			<button class="btn btn-primary">Abbrechen</button>
		</div>
	</form>
	@addressSettingsData(acc.Street.String, acc.HouseNumber.String, acc.City.String, acc.ZipCode.Int32)
}

script addressSettingsData(street string, housenumber string, city string, zip int32) {
	let marker
	const map = L.map("map")

	getPosition(`${street} ${housenumber}, ${zip} ${city}`).then(position => {
		map.setView(position, 17)
		L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
			maxZoom: 20
		}).addTo(map)


		marker = L.marker(position)
		map.addLayer(marker)
	})


	document.searchLocation = async function() {
		const street = document.getElementById("street").value
		const housenumber = document.getElementById("housenumber").value
		const city = document.getElementById("city").value
		const zip = document.getElementById("zip").value
		const position = await getPosition(`${street} ${housenumber}, ${zip} ${city}`)
		map.setView(position)
		marker.setLatLng(position)
	}
}
