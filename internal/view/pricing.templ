package view

import "github.com/bitstorm-tech/cockaigne/internal/model"
import "fmt"
import "time"

templ Pricing(hasActiveSubscription bool, activeVouchers []string, lang string) {
	@BaseLayout() {
		<section class="flex flex-col items-center gap-4 p-4" x-data="{tabIndex: 0}">
			<h1>{ t("prices_and_subscriptions", lang) }</h1>
			if hasActiveSubscription {
				<h2 class="text-red">{ t("already_have_active_subscription", lang) }</h2>
			}
			<div class="join grid grid-cols-3 w-full">
				<input class="join-item btn" type="radio" name="options" aria-label={ t("basic_pricing", lang) } checked @click="tabIndex = 0"/>
				<input class="join-item btn" type="radio" name="options" aria-label={ t("monthly_subscription", lang) } @click="tabIndex = 1"/>
				<input class="join-item btn" type="radio" name="options" aria-label={ t("yearly_subscription", lang) } @click="tabIndex = 2"/>
			</div>
			<i class="px-4 text-center text-sm" :class="{'invisible': tabIndex === 0}">
				{ t("save_10_percent_with_yearly", lang) }
			</i>
			// -------------------------------------
			// Basic
			// -------------------------------------
			<template x-if="tabIndex === 0">
				@basicPlanCard("Basic", "4,99 € / "+t("deal", lang)) {
					<ul>
						<li class="list-disc">
							<div class="flex items-baseline gap-2">
								{ t("basic_pricing_description_1", lang) }
								<div class="text-xs">{ t("basic_pricing_description_1_24_hours", lang) }</div>
							</div>
						</li>
						<li class="list-disc">{ t("basic_pricing_description_2", lang) }</li>
					</ul>
				}
			</template>
			<div class="w-full" hx-get="/active-vouchers-card" hx-target="this" hx-trigger="load" x-show="tabIndex === 0"></div>
			// -------------------------------------
			// Montly plan
			// -------------------------------------
			<div class="flex flex-col gap-4 w-full" x-show="tabIndex === 1">
				@planCard(t("starter", lang), "99,90 € / "+t("month", lang), hasActiveSubscription, "1", lang) {
					<ul>
						<li class="list-disc">{ t("monthly_starter_1", lang) }</li>
						<li class="list-disc">{ t("monthly_starter_2", lang) }</li>
						<li class="list-disc">{ t("monthly_starter_3", lang) }</li>
					</ul>
				}
				@planCard(t("exclusive", lang), "249,90 € / "+t("month", lang), hasActiveSubscription, "2", lang) {
					<ul>
						<li class="list-disc">{ t("monthly_exclusive_1", lang) }</li>
						<li class="list-disc">{ t("monthly_exclusive_2", lang) }</li>
						<li class="list-disc">{ t("monthly_exclusive_3", lang) }</li>
						<li class="list-disc">{ t("monthly_exclusive_4", lang) }</li>
					</ul>
				}
				@planCard(t("premium", lang), "349,90 € / "+t("month", lang), hasActiveSubscription, "3", lang) {
					<ul>
						<li class="list-disc">{ t("monthly_premium_1", lang) }</li>
						<li class="list-disc">{ t("monthly_premium_2", lang) }</li>
						<li class="list-disc">{ t("monthly_premium_3", lang) }</li>
						<li class="list-disc">{ t("monthly_premium_4", lang) }</li>
					</ul>
				}
			</div>
			// -------------------------------------
			// Yearly plan
			// -------------------------------------
			<div class="flex flex-col gap-4 w-full" x-show="tabIndex === 2">
				@planCard(t("starter", lang), "1.099,90 € / "+t("year", lang), hasActiveSubscription, "4", lang) {
					<ul>
						<li class="list-disc">{ t("yearly_starter_1", lang) }</li>
						<li class="list-disc">{ t("yearly_starter_2", lang) }</li>
						<li class="list-disc">{ t("yearly_starter_3", lang) }</li>
					</ul>
				}
				@planCard(t("exclusive", lang), "2.699,90 € / "+t("year", lang), hasActiveSubscription, "5", lang) {
					<ul>
						<li class="list-disc">{ t("yearly_exclusive_1", lang) }</li>
						<li class="list-disc">{ t("yearly_exclusive_2", lang) }</li>
						<li class="list-disc">{ t("yearly_exclusive_3", lang) }</li>
						<li class="list-disc">{ t("yearly_exclusive_4", lang) }</li>
					</ul>
				}
				@planCard(t("premium", lang), "3.799,90 € / "+t("year", lang), hasActiveSubscription, "6", lang) {
					<ul>
						<li class="list-disc">{ t("yearly_premium_1", lang) }</li>
						<li class="list-disc">{ t("yearly_premium_2", lang) }</li>
						<li class="list-disc">{ t("yearly_premium_3", lang) }</li>
						<li class="list-disc">{ t("yearly_premium_4", lang) }</li>
					</ul>
				}
			</div>
		</section>
	}
}

templ planCard(title string, price string, hasActiveSubscription bool, planId string, lang string) {
	<div class="card w-full text-100 shadow-xl bg-neutral">
		<div class="card-body gap-6">
			<span class="card-title w-full justify-between">
				<span>{ title }</span>
				<span class="text-sm">{ price }</span>
			</span>
			{ children... }
			<div class="card-actions justify-end">
				if hasActiveSubscription {
					<span>Du hast bereits ein aktives Abo!</span>
				} else {
					<button hx-post={ "/subscribe/" + planId }>{ t("subscription_subscribe", lang) }</button>
				}
			</div>
		</div>
	</div>
}

templ basicPlanCard(title string, price string) {
	<div class="card w-full text-100 shadow-xl bg-neutral">
		<div class="card-body gap-6">
			<span class="card-title w-full justify-between">
				<span>{ title }</span>
				<span class="text-sm">{ price }</span>
			</span>
			{ children... }
		</div>
	</div>
}

templ VoucherCard(activeVouchers []model.ActiveVoucher, err bool, lang string) {
	<form id="voucher" class="card w-full text-100 shadow-xl bg-neutral">
		<div class="card-body gap-6">
			<span class="card-title">{ t("vouchers", lang) }</span>
			if len(activeVouchers) > 0 {
				<div>
					<div class="text-sm pb-2">Bereits eingelöste Gutscheine:</div>
					<ul class="text-xs">
						for _, voucher := range activeVouchers {
							<li>{ redeemedVoucherInfo(voucher) }</li>
						}
					</ul>
				</div>
			}
			if err {
				<i class="text-red-500">Kann aktive Gutscheine momentan nicht anzeigen, bitte versuche es später nochmal.</i>
			}
			<div class="form-control">
				<label for="voucher-code">{ t("voucher_code", lang) }</label>
				<input id="voucher-code" name="voucher-code" type="text" class="text-100"/>
			</div>
			<div class="card-actions justify-end">
				<button hx-post="/voucher-redeem" hx-target="#voucher" hx-swap="outerHTML" class="btn btn-warning">{ t("redeem", lang) }</button>
			</div>
		</div>
	</form>
}

func redeemedVoucherInfo(voucher model.ActiveVoucher) string {
	prefix := fmt.Sprintf("%s (%d%%) -", voucher.Code, voucher.DiscountInPercent)
	now := time.Now()
	daysLeft := int(voucher.End.Sub(now).Hours() / 24)

	if daysLeft > 0 {
		return fmt.Sprintf("%s noch %d Tag(e) gültig", prefix, daysLeft)
	}

	return prefix + " abgelaufen"
}
